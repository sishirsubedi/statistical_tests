load("/home/sishirsubedi/Downloads/HW1.RData")
load("/home/sishirsubedi/Downloads/HW1.RData")
test.labels
test.resp
library(rpart)
library(pROC)
Dat <- kyphosis
a <- rep(0, nrow(Dat))
a[which(Dat$Kyphosis == "present")] <- 1
Dat$Present <- a
a <- sample(c(1:nrow(Dat)), size = nrow(Dat) * 0.7, replace = FALSE)
Train <- Dat[a, ]
Test <- Dat[-a, ]
RP1 <- rpart(Present ~ Age + Number + Start, Train, control = rpart.control(minsplit = 15, cp = 1e-04))
Pred1 <- predict(RP1, Test[, c("Age", "Number", "Start")])
Test$Prediction1 <- Pred1
Test$Prediction1
Test$Present
ROC1 <- roc(Test$Present, Test$Prediction1)
plot(ROC1, col = "blue")
test.rest
test.resp
test.labels
Test$Prediction1
Test$Prediction1 = test.resp
ROC1 <- roc(test.labels, test.resp)
plot(ROC1, col = "blue")
library('ebdbNET')
install.packages('ebdbNET')
install.packages('ebdbNet')
library('glmnet')
rnorm(100, 75, 1)
a -> rnorm(100, 75, 2)
a <- rnorm(100, 75, 2)
view a
head(a)
a <- rnorm(100, 75, 5)
head(a)
a
plot(a)
a <- rnorm(100, 75, 5)
ha <-dnorm(a)
a
plot(a)
plot(a,ha, type="l", lty=2)
ha <-(a)
a
plot(a,ha, type="l", lty=2)
plot(a,type="l", lty=2)
plot(x, hx, type="n", xlab="IQ Values", ylab="",
main="Normal Distribution", axes=FALSE)
mean=100; sd=15
lb=80; ub=120
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="n", xlab="IQ Values", ylab="",
main="Normal Distribution", axes=FALSE)
plot(x, hx, type="n", xlab="Values", ylab="",
main="Normal Distribution", axes=FALSE)
plot(x, hx, type="n", xlab="Values")
plot(x, hx, type="1", xlab="Values")
plot(x, hx, type="l", xlab="Values")
plot(x, hx, type="l", xlab="Values")
mean=100; sd=15
lb=80; ub=120
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
mean=80; sd=5
lb=80; ub=120
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
mean=80; sd=5
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
mean=80; sd=5
x <- seq(0,8,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
x <- seq(-4,4,length=100)*sd + mean
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
meanP = mean(x)
meanP <- mean(x)
mean=80; sd=5
x <- seq(-4,4,length=100)*sd
meanP <- mean(x)
hx <- dnorm(x,mean,sd)
plot(x, hx, type="l", xlab="Values")
xbar = 14.6            # sample mean
mu0 = 15.4             # hypothesized value
sigma = 2.5            # population standard deviation
n = 35                 # sample size
z = (xbar - mu0)/(sigma/sqrt(n))
z                      # test statistic
alpha = .05
z.half.alpha = qnorm(1âˆ’alpha/2)
z.half.alpha = qnorm(1-alpha/2)
c(-z.half.alpha, z.half.alpha)
xbar = 14.6            # sample mean
mu0 = 15.4             # hypothesized value
s = 2.5                # sample standard deviation
n = 35                 # sample size
t = (xbar-mu0)/(s/sqrt(n))
t                      # test statistic
alpha = .05
t.half.alpha = qt(1-alpha/2, df=n-1)
c(-t.half.alpha, t.half.alpha)
setwd("~/DxTerity_Bioinformatics_Questionnaire")
dat = read.csv('test.csv')
setwd("~/ghub/statistical_tests")
dat = read.csv('anova_test.csv')
head(dat)
dat = dat[,2:4]
model1 = aov(Measurement ~ Technician +  Instrument , data = dat)
model1 = aov(Measurement ~ Technician , data = dat)
summary(model1)
